{"version":3,"sources":["../src/deploy.js"],"names":[],"mappings":"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","file":"deploy.js","sourcesContent":["(function(){\r\n  var path = require('path'),\r\n      prompt = require('prompt'),\r\n      build = require('./build.js').execute,\r\n      fs = require('fs'),\r\n      Q = require('q'),\r\n      _ = require('lodash'),\r\n      s3sync = require('s3-sync-aws'),\r\n      readdirp = require('readdirp'),\r\n      loginFile = path.join(process.cwd(), '.chcplogin');\r\n\r\n  module.exports = {\r\n    execute: execute\r\n  };\r\n\r\n  function execute(context) {\r\n    var executeDfd = Q.defer();\r\n\r\n    build(context).then(function(){\r\n      deploy(context).then(function(){\r\n        executeDfd.resolve();\r\n      });\r\n    });\r\n\r\n    return executeDfd.promise;\r\n  }\r\n\r\n  function deploy(context) {\r\n    var executeDfd = Q.defer(),\r\n        config,\r\n        credentials,\r\n        ignore = context.ignoredFiles;\r\n\r\n    try {\r\n      config = fs.readFileSync(context.defaultConfig, 'utf8');\r\n      config = JSON.parse(config);\r\n    } catch(e) {\r\n      console.log('Cannot parse cordova-hcp.json. Did you run cordova-hcp init?');\r\n      process.exit(0);\r\n    }\r\n    if(!config) {\r\n      console.log('You need to run \"cordova-hcp init\" before you can run \"cordova-hcp login\".');\r\n      console.log('Both commands needs to be invoked in the root of the project directory.');\r\n      process.exit(0);\r\n    }\r\n    try {\r\n      credentials = fs.readFileSync(loginFile, 'utf8');\r\n      credentials = JSON.parse(credentials);\r\n    } catch(e) {\r\n      console.log('Cannot parse .chcplogin: ', e);\r\n    }\r\n    if(!credentials) {\r\n      console.log('You need to run \"cordova-hcp login\" before you can run \"cordova-hcp deploy\".');\r\n      process.exit(0);\r\n    }\r\n\r\n    ignore = ignore.filter( ignoredFile => !ignoredFile.match(/^chcp/) )\r\n    ignore = ignore.map( ignoredFile => `!${ignoredFile}` )\r\n\r\n    // console.log('Credentials: ', credentials);\r\n    // console.log('Config: ', config);\r\n    // console.log('Ignore: ', ignore);\r\n\r\n    var files = readdirp({\r\n      root: context.sourceDirectory,\r\n      fileFilter: ignore\r\n    });\r\n\r\n    var uploader = s3sync({\r\n      key: credentials.key,\r\n      secret: credentials.secret,\r\n      region: config.s3region,\r\n      bucket: config.s3bucket,\r\n      prefix: config.s3prefix,\r\n      acl: 'public-read',\r\n      headers: {\r\n        CacheControl: 'no-cache, no-store, must-revalidate',\r\n        Expires: 0\r\n      },\r\n      concurrency: 20\r\n    }).on('data', function(file) {\r\n      if (file.fresh) {\r\n        console.log(\"Updated \" + file.fullPath + ' -> ' + file.url)\r\n      }\r\n    });\r\n\r\n    files.pipe(uploader);\r\n\r\n    console.log('Deploy started');\r\n    uploader.on('error', function(err) {\r\n      console.error(\"unable to sync:\", err.stack);\r\n      executeDfd.reject();\r\n    });\r\n    uploader.on('fail', function(err) {\r\n      console.error(\"unable to sync:\", err);\r\n      executeDfd.reject();\r\n    });\r\n\r\n    //uploader.on('progress', function() {\r\n    //  var progress = uploader.progressTotal - uploader.progressAmount;\r\n    //  console.log(\"progress\", progress, uploader.progressTotal, uploader.progressAmount);\r\n    //});\r\n    uploader.on('end', function() {\r\n      console.log(\"Deploy done\");\r\n      executeDfd.resolve();\r\n    });\r\n    return executeDfd.promise;\r\n  }\r\n})();\r\n"]}