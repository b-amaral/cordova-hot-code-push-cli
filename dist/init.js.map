{"version":3,"sources":["../src/init.js"],"names":[],"mappings":";;;;;;;;;0BAAuB,aAAa;;;;oBAInB,MAAM;;;;sBACJ,QAAQ;;;;sBACb,QAAQ;;;;qBAEc,SAAS;;AAN7C,wBAAW,QAAQ,EAAE,CAAC;;AAQtB,IAAM,UAAU,GAAG,kBAAK,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,kBAAkB,CAAC,CAAC;;AAEhE,IAAM,IAAI,GAAG;AACX,aAAW,EAAE,+BAA+B;AAC5C,SAAO,EAAE,oBAAoB;AAC7B,SAAO,EAAE,qDAAqD;AAC9D,UAAQ,EAAE,IAAI;CACf,CAAC;;AAEF,IAAM,QAAQ,GAAG;AACf,aAAW,EAAE,yDAAyD;AACtE,SAAO,EAAE,oBAAoB;AAC7B,SAAO,EAAE,+CAA+C;CACzD,CAAC;;AAEF,IAAM,QAAQ,GAAG;AACf,aAAW,EAAE,qDAAqD;AAClE,SAAO,EAAE,0BAA0B;AACnC,SAAO,EAAE,yGAAyG;CACnH,CAAC;;AAEF,IAAM,QAAQ,GAAG;AACf,aAAW,EAAE,oDAAoD;AACjE,SAAO,EAAE,iHAAiH;AAC1H,aAAS,WAAW;AACpB,SAAO,EAAE,qIAAqI;CAC/I,CAAC;;AAEF,IAAM,aAAa,GAAG;AACpB,aAAW,EAAE,oBAAoB;AACjC,SAAO,EAAE,oBAAoB;CAC9B,CAAC;;AAEF,IAAM,iBAAiB,GAAG;AACxB,aAAW,EAAE,wBAAwB;AACrC,SAAO,EAAE,oBAAoB;CAC9B,CAAC;;AAEF,IAAM,MAAM,GAAG;AACb,aAAW,EAAE,0BAA0B;AACvC,SAAO,EAAE,oBAAoB;AAC7B,UAAQ,EAAE,IAAI;AACd,SAAO,EAAE,yCAAyC;AAClD,aAAS,QAAQ;CAClB,CAAC;;AAEF,IAAM,MAAM,GAAG;AACb,YAAU,EAAE;AACV,QAAI,EAAJ,IAAI;AACJ,YAAQ,EAAR,QAAQ;AACR,YAAQ,EAAR,QAAQ;AACR,YAAQ,EAAR,QAAQ;AACR,kBAAc,EAAE,aAAa;AAC7B,sBAAkB,EAAE,iBAAiB;AACrC,UAAM,EAAN,MAAM;GACP;CACF,CAAC;;AAEF,IAAM,SAAS,GAAG;AAChB,YAAU,EAAE;AACV,eAAW,EAAE;AACX,iBAAW,EAAE,6EAA6E;AAC1F,aAAO,EAAE,iBAAiB;AAC1B,cAAQ,EAAE,IAAI;KACf;GACF;CACF,CAAC;;AAEK,SAAS,OAAO,CAAC,OAAO,EAAE;AAC/B,sBAAO,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;AAC/B,sBAAO,OAAO,GAAG,gBAAgB,CAAC;AAClC,sBAAO,SAAS,GAAG,IAAI,CAAC;AACxB,sBAAO,KAAK,EAAE,CAAC;;AAEf,MAAI,MAAM,YAAA,CAAC;;AAEX,4CAAiB,MAAM,CAAC,CACrB,IAAI,CAAC,cAAc,CAAC,CACpB,IAAI,CAAC,UAAA,GAAG;WAAI,MAAM,GAAG,GAAG;GAAA,CAAC,CACzB,IAAI,CAAC,MAAM,CAAC,CACZ,IAAI,CAAC,UAAA,GAAG;WAAI,oBAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;GAAA,CAAC,CAClC,IAAI,CAAC,UAAA,OAAO;WAAI,sBAAU,UAAU,EAAE,OAAO,CAAC;GAAA,CAAC,CAC/C,IAAI,CAAC,IAAI,CAAC,CAAC;CACf;;AAED,SAAS,cAAc,CAAC,MAAM,EAAE;AAC9B,MAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACpB,WAAO,oBAAE,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;GAC7D;;AAED,SAAO,MAAM,CAAC;CACf;;AAED,SAAS,MAAM,CAAC,IAAsD,EAAE;MAA5C,MAAM,GAAlB,IAAsD,CAApD,QAAQ;MAAoB,MAAM,GAApC,IAAsD,CAAlC,QAAQ;MAAoB,IAAI,GAApD,IAAsD,CAAhB,QAAQ;;AAC5D,MAAI,CAAC,MAAM,EAAE;AACX,WAAO,0CAAiB,SAAS,CAAC,CAAC;GACpC;;AAED,SAAO,EAAE,WAAW,EAAE,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;CAC7D;;AAED,SAAS,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AAC3C,MAAI,GAAG,GAAG,MAAM,KAAK,WAAW,GAAG,kBAAkB,WAAS,MAAM,mBAAgB,CAAC;AACrF,KAAG,gBAAc,GAAG,SAAI,MAAM,AAAE,CAAA;;AAEhC,MAAI,IAAI,EAAE;AACR,OAAG,UAAQ,IAAI,AAAE,CAAC;GACnB;;AAED,SAAO,GAAG,CAAC;CACZ;;AAED,SAAS,IAAI,CAAC,GAAG,EAAE;AACjB,MAAI,GAAG,EAAE;AACP,WAAO,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;GACzB;AACD,SAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;AACtE,SAAO,CAAC,GAAG,CAAC,gFAAgF,CAAC,CAAC;AAC9F,SAAO,CAAC,GAAG,CAAC,sFAAsF,CAAC,CAAC;CACrG","file":"init.js","sourcesContent":["import es6promise from 'es6-promise';\r\n\r\nes6promise.polyfill();\r\n\r\nimport path from 'path';\r\nimport prompt from 'prompt';\r\nimport _ from 'lodash';\r\n\r\nimport { getInput, writeFile } from './utils';\r\n\r\nconst configFile = path.join(process.cwd(), 'cordova-hcp.json');\r\n\r\nconst name = {\r\n  description: 'Enter project name (required)',\r\n  pattern: /^[a-zA-Z\\-\\s0-9]+$/,\r\n  message: 'Name must be only letters, numbers, space or dashes',\r\n  required: true,\r\n};\r\n\r\nconst s3bucket = {\r\n  description: 'Amazon S3 Bucket name (required for cordova-hcp deploy)',\r\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\r\n  message: 'Name must be only letters, numbers, or dashes',\r\n};\r\n\r\nconst s3prefix = {\r\n  description: 'Path in S3 bucket (optional for cordova-hcp deploy)',\r\n  pattern: /^[a-zA-Z\\-\\s0-9\\.\\/]+\\/$/,\r\n  message: 'Path must be only letters, numbers, spaces, forward slashes or dashes and must end with a forward slash',\r\n};\r\n\r\nconst s3region = {\r\n  description: 'Amazon S3 region (required for cordova-hcp deploy)',\r\n  pattern: /^(us-east-1|us-west-2|us-west-1|eu-west-1|eu-central-1|ap-southeast-1|ap-southeast-2|ap-northeast-1|sa-east-1)$/,\r\n  default: 'us-east-1',\r\n  message: 'Must be one of: us-east-1, us-west-2, us-west-1, eu-west-1, eu-central-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1',\r\n};\r\n\r\nconst iosIdentifier = {\r\n  description: 'IOS app identifier',\r\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\r\n};\r\n\r\nconst androidIdentifier = {\r\n  description: 'Android app identifier',\r\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\r\n};\r\n\r\nconst update = {\r\n  description: 'Update method (required)',\r\n  pattern: /(start|resume|now)/,\r\n  required: true,\r\n  message: 'Needs to be one of start, resume or now',\r\n  default: 'resume',\r\n};\r\n\r\nconst schema = {\r\n  properties: {\r\n    name,\r\n    s3bucket,\r\n    s3prefix,\r\n    s3region,\r\n    ios_identifier: iosIdentifier,\r\n    android_identifier: androidIdentifier,\r\n    update,\r\n  },\r\n};\r\n\r\nconst urlSchema = {\r\n  properties: {\r\n    content_url: {\r\n      description: 'Enter full URL to directory where cordova-hcp build result will be uploaded',\r\n      message: 'Must supply URL',\r\n      required: true,\r\n    },\r\n  },\r\n};\r\n\r\nexport function execute(context) {\r\n  prompt.override = context.argv;\r\n  prompt.message = 'Please provide';\r\n  prompt.delimiter = ': ';\r\n  prompt.start();\r\n\r\n  let result;\r\n\r\n  getInput(prompt, schema)\r\n    .then(validateBucket)\r\n    .then(res => result = res)\r\n    .then(getUrl)\r\n    .then(url => _.assign(result, url))\r\n    .then(content => writeFile(configFile, content))\r\n    .then(done);\r\n}\r\n\r\nfunction validateBucket(result) {\r\n  if (!result.s3bucket) {\r\n    return _.omit(result, ['s3region', 's3bucket', 's3prefix']);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getUrl({ s3region: region, s3bucket: bucket, s3prefix: path }) {\r\n  if (!bucket) {\r\n    return getInput(prompt, urlSchema);\r\n  }\r\n\r\n  return { content_url: getContentUrl(region, bucket, path) };\r\n}\r\n\r\nfunction getContentUrl(region, bucket, path) {\r\n  let url = region === 'us-east-1' ? 's3.amazonaws.com' : `s3-${region}.amazonaws.com`;\r\n  url = `https://${url}/${bucket}`\r\n\r\n  if (path) {\r\n    url += `/${path}`;\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\nfunction done(err) {\r\n  if (err) {\r\n    return console.log(err);\r\n  }\r\n  console.log('Project initialized and cordova-hcp.json file created.');\r\n  console.log('If you wish to exclude files from being published, specify them in .chcpignore');\r\n  console.log('Before you can push updates you need to run \"cordova-hcp login\" in project directory');\r\n}\r\n"]}