{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["(function(){\r\n  var path = require('path'),\r\n      envFile = path.join(process.cwd(), '.chcpenv'),\r\n      Q = require('q'),\r\n      _ = require('lodash'),\r\n      fs = require(\"fs\"),\r\n      buildDirectory = path.join(process.cwd(), '.chcpbuild'),\r\n      watch = require('watch'),\r\n      express = require('express'),\r\n      app = express(),\r\n      assetPort = process.env.PORT || 31284,\r\n      disablePublicTunnel = process.env.DISABLE_PUBLIC_TUNNEL || false,\r\n      compression = require('compression'),\r\n      build = require('./build.js').execute,\r\n      minimatch = require('minimatch'),\r\n      hidefile = require('hidefile'),\r\n      io,\r\n      chcpContext,\r\n      sourceDirectory,\r\n      ignoredFiles,\r\n      opts = {};\r\n\r\n  module.exports = {\r\n    execute: execute\r\n  };\r\n\r\n  function updateLocalEnv(localEnv) {\r\n    localEnv.config_url = localEnv.content_url + '/chcp.json';\r\n\r\n    var json = JSON.stringify(localEnv, null, 2);\r\n    fs.writeFileSync(envFile, json);\r\n\r\n    return localEnv;\r\n  }\r\n\r\n  function execute(context) {\r\n    chcpContext = context;\r\n    ignoredFiles = context.ignoredFiles;\r\n    chcpContext.argv.localdev = true;\r\n    sourceDirectory = chcpContext.sourceDirectory;\r\n\r\n    var executeDfd = Q.defer(),\r\n      funcs = [];\r\n\r\n    funcs.push(function(){\r\n      if (disablePublicTunnel)\r\n        return;\r\n      return publicTunnel(assetPort);\r\n    });\r\n\r\n    funcs.push(function(content_url) {\r\n      var dfd = Q.defer();\r\n\r\n      if (!disablePublicTunnel) {\r\n        opts.content_url = content_url;\r\n        chcpContext.argv.content_url = content_url;\r\n      }\r\n\r\n      dfd.resolve();\r\n      return dfd.promise;\r\n    });\r\n\r\n    funcs.push(function(debugOpts){\r\n      if(debugOpts){\r\n        opts.debug_url = debugOpts.debug_url;\r\n        opts.console_url = debugOpts.console_url;\r\n      }\r\n\r\n      return assetServer(opts);\r\n    });\r\n\r\n    funcs.push(function(local_url){\r\n      console.log('local_url', local_url);\r\n      opts.local_url = local_url;\r\n\r\n      return build(chcpContext);\r\n    });\r\n\r\n    funcs.push(function(config){\r\n      if (disablePublicTunnel) {\r\n        updateLocalEnv({ content_url: config.content_url })\r\n      }\r\n      console.log('cordova-hcp local server available at: ' + opts.local_url);\r\n      console.log('cordova-hcp public server available at: ' + config.content_url);\r\n    });\r\n\r\n    return funcs.reduce(Q.when, Q('initial'));\r\n  }\r\n\r\n  function fileChangeFilter(file) {\r\n    // Ignore changes in files from the ignore list\r\n    var fileIsAllowed = true;\r\n    var relativeFilePath = path.relative(chcpContext.sourceDirectory, file);\r\n    for (var i=0, len=ignoredFiles.length; i<len; i++) {\r\n      if (hidefile.isHiddenSync(file) || minimatch(relativeFilePath, ignoredFiles[i])) {\r\n        fileIsAllowed = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return fileIsAllowed;\r\n  }\r\n\r\n  function assetServer(opts) {\r\n    var serverDfd = Q.defer(),\r\n        localUrl = 'http://localhost:' + assetPort;\r\n\r\n    // If a lot of files changes at the same time, we only want to trigger the change event once.\r\n    handleFileChange = _.debounce(handleFileChange, 500);\r\n\r\n    try {\r\n      killCaches(app);\r\n      serveStaticAssets(app, opts);\r\n      serveSocketIO(app);\r\n      watchForFileChange();\r\n      serverDfd.resolve(localUrl);\r\n    } catch(err) {\r\n      console.error('assetServer error: ', err);\r\n      serverDfd.reject(err);\r\n    }\r\n\r\n    return serverDfd.promise;\r\n  }\r\n\r\n  function watchForFileChange(){\r\n    // Monitor for file changes\r\n    console.log('Checking: ', sourceDirectory);\r\n    watch.watchTree(sourceDirectory, {filter: fileChangeFilter}, function (f, curr, prev) {\r\n      if (typeof f == \"object\" && prev === null && curr === null) {\r\n        // Finished walking the tree\r\n        // console.log('Finished');\r\n      } else {\r\n        handleFileChange(f);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleFileChange(file) {\r\n    console.log('File changed: ', file);\r\n    build(chcpContext).then(function(config) {\r\n      console.log('Should trigger reload for build: '+config.release);\r\n      io.emit('release', { config: config });\r\n    });\r\n  }\r\n\r\n  function serveSocketIO(app) {\r\n    // Let's start the server\r\n    io = require(\"socket.io\")(app.listen(assetPort));\r\n\r\n    // Open up socket for file change notifications\r\n    //io.set('transports', ['polling']);\r\n    io.on('connection', function(socket){\r\n      console.log('a user connected');\r\n      socket.on('disconnect', function(){\r\n        console.log('user disconnected');\r\n      });\r\n    });\r\n  }\r\n\r\n  function serveStaticAssets(app, opts) {\r\n\r\n    // Static assets\r\n    app.use(compression());\r\n    app.enable('view cache');\r\n    app.use('/', express.static(sourceDirectory, { maxAge: 0 }));\r\n  }\r\n\r\n  function killCaches(ass) {\r\n    // Disable caches\r\n    app.disable('etag');\r\n    app.use(function(req, res, next) {\r\n      req.headers['if-none-match'] = 'no-match-for-this';\r\n      next();\r\n    });\r\n  }\r\n\r\n  function publicTunnel(port, options){\r\n    var publicTunnelDfd = Q.defer(),\r\n        ngrok = require('ngrok');\r\n\r\n    // And make it accessible from the internet\r\n    ngrok.connect(port, function (err, url) {\r\n      if (err) {\r\n        publicTunnelDfd.reject(err);\r\n        return console.log('Could not create tunnel: ', err);\r\n      }\r\n\r\n      updateLocalEnv({content_url: url});\r\n\r\n      publicTunnelDfd.resolve(url);\r\n    });\r\n\r\n\r\n    return publicTunnelDfd.promise;\r\n  }\r\n})();\r\n"]}