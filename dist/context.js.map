{"version":3,"sources":["../src/context.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;;AAEV,MAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,MAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC7B,MAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,MAAI,yBAAyB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,aAAa,CAAC,CAAC;AACxE,MAAI,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;AACzD,MAAI,kBAAkB,GAAG,kBAAkB,CAAC;AAC5C,MAAI,mBAAmB,GAAG,CACtB,WAAW,EACX,gBAAgB,EAChB,iBAAiB,EACjB,WAAW,EACX,eAAe,EACf,QAAQ,EACR,YAAY,EACZ,UAAU,EACV,MAAM,EACN,cAAc,CAAC,CAAC;;AAEpB,QAAM,CAAC,OAAO,GAAG;AACf,WAAO,EAAG,OAAO;GAClB,CAAC;;AAEF,WAAS,OAAO,CAAC,IAAI,EAAE;AACrB,WAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;GAC1B;;AAED,MAAI,OAAO,GAAG,SAAV,OAAO,CAAY,IAAI,EAAE;AAC3B,QAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AAC7B,QAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAG,IAAI,CAAC,MAAM,IAAI,kBAAkB,CAAE,CAAC;AAC/E,QAAI,CAAC,aAAa,GAAG,UAAU,CAAE;AACjC,QAAI,CAAC,eAAe,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAChD,QAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;AACzE,QAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;AAC3E,QAAI,CAAC,YAAY,GAAG,eAAe,EAAE,CAAC;GACvC,CAAC;;AAEF,WAAS,kBAAkB,CAAC,IAAI,EAAE;AAChC,QAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC;AACzB,QAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5C,aAAO,kBAAkB,CAAC;KAC3B;;AAED,WAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;GACjD;;AAED,WAAS,eAAe,GAAG;AACzB,QAAI,aAAa,GAAG,6BAA6B,CAAC,yBAAyB,CAAC,CAAC;AAC7E,QAAI,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;;;AAG9D,KAAC,CAAC,MAAM,CAAC,WAAW,EAAE,UAAS,IAAI,EAAE;AACnC,aAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;KAC7D,CAAC,CAAC;;AAEH,WAAO,WAAW,CAAC;GACpB;;AAED,WAAS,6BAA6B,CAAC,YAAY,EAAE;AACnD,QAAI,WAAW,CAAC;AAChB,QAAI;AACF,iBAAW,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KACrD,CAAC,OAAO,CAAC,EAAE;AACV,aAAO,EAAE,CAAC;KACX;;AAED,WAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GACxC;CAEF,CAAA,EAAG,CAAC","file":"context.js","sourcesContent":["(function() {\r\n\r\n  var path = require('path');\r\n  var fs = require('fs-extra');\r\n  var _ = require('lodash');\r\n  var IGNORED_FILES_CONFIG_PATH = path.join(process.cwd(), '.chcpignore');\r\n  var DEFAULT_WWW_FOLDER = path.join(process.cwd(), 'www');\r\n  var DEFAULT_CLI_CONFIG = 'cordova-hcp.json';\r\n  var DEFAULT_IGNORE_LIST = [\r\n      '.DS_Store',\r\n      'node_modules/*',\r\n      'node_modules\\\\*',\r\n      'chcp.json',\r\n      'chcp.manifest',\r\n      '.chcp*',\r\n      '.gitignore',\r\n      '.gitkeep',\r\n      '.git',\r\n      'package.json'];\r\n\r\n  module.exports = {\r\n    context : context\r\n  };\r\n\r\n  function context(argv) {\r\n    return new Context(argv);\r\n  }\r\n\r\n  var Context = function(argv) {\r\n    this.argv = argv ? argv : {};\r\n    var configFile = path.join(process.cwd(), (argv.config || DEFAULT_CLI_CONFIG));\r\n    this.defaultConfig = configFile ;\r\n    this.sourceDirectory = getSourceDirectory(argv);\r\n    this.manifestFilePath = path.join(this.sourceDirectory, 'chcp.manifest');\r\n    this.projectsConfigFilePath = path.join(this.sourceDirectory, 'chcp.json');\r\n    this.ignoredFiles = getIgnoredFiles();\r\n  };\r\n\r\n  function getSourceDirectory(argv) {\r\n    var consoleArgs = argv._;\r\n    if (!consoleArgs || consoleArgs.length !== 2) {\r\n      return DEFAULT_WWW_FOLDER;\r\n    }\r\n\r\n    return path.join(process.cwd(), consoleArgs[1]);\r\n  }\r\n\r\n  function getIgnoredFiles() {\r\n    var projectIgnore = readIgnoredFilesProjectConfig(IGNORED_FILES_CONFIG_PATH);\r\n    var ignoredList = _.union(DEFAULT_IGNORE_LIST, projectIgnore);\r\n\r\n    // remove comments and empty items\r\n    _.remove(ignoredList, function(item) {\r\n      return item.indexOf('#') === 0 || _.trim(item).length === 0;\r\n    });\r\n\r\n    return ignoredList;\r\n  }\r\n\r\n  function readIgnoredFilesProjectConfig(pathToConfig) {\r\n    var fileContent;\r\n    try {\r\n      fileContent = fs.readFileSync(pathToConfig, 'utf8');\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n\r\n    return _.trim(fileContent).split(/\\n/);\r\n  }\r\n\r\n})();\r\n"]}